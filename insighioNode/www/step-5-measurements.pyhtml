<!DOCTYPE html>

<html>

<head>
  <meta charset="UTF-8" />
  <title>insigh.io Device</title>
  <link rel="stylesheet" href="css/style.css" />
  <link rel="stylesheet" href="css/spectre.min.css" />
  <link rel="stylesheet" href="css/spectre-icons.min.css" />
</head>

{{ py }}
def addSwitch(switchId, switchLabel):
    return '''
    <div class="col-4 col-sm-12">
      <label class="form-label">
    ''' + switchLabel + '''
    </label>
    </div>
    <div class="col-8 col-sm-12">
      <div class="form-group">
        <label class="form-switch">
          <input type="checkbox" id="''' + switchId + '''" />
          <i class="form-icon"></i>
        </label>
      </div>
    </div>
    <br />
    <br />
    '''

i2cOptions = [
    ["disabled", "disabled"],
    ["tsl2561 - luminosity", "tsl2561"],
    ["sht20 - temperature / humidity", "sht20"],
    ["sht40 - temperature / humidity", "sht40"],
    ["si7021 - temperature / humidity", "si7021"],
    ["scd30 - C02 / temperature / humidity", "scd30"],
    ["bme680 - gap / temperature / humidity", "bme680"],
    ["sunrise - CO2 / temperature", "sunrise"]
]

adcOptions = [
    ["disabled", "disabled"],
    ["dht11 - temperature / humidity (digital)", "dht11"],
    ["dht22 - temperature / humidity (digital)", "dht22"],
    ["ds18x20 - temperature (OneWire)", "ds18x20"],
    ["generic analog", "analog"]
]

def generateOptions(optionsDict):
    res = ''
    for keyVal in optionsDict:
        res += '<option value="{}">{}</option>\n'.format(keyVal[1], keyVal[0])
    return res
{{ end }}

<body class="body-custom">
  <img src="img/logo.png" class="img-responsive img-center">

  <div class="panel panel-custom">
    <div class="panel-header">
      <div class="panel-title text-center">Set active measurements</div>
    </div>

    <div class="panel-nav">
      <ul class="step">
        <li class="step-item"><a>Login</a></li>
        <li class="step-item"><a>Select Network</a></li>
        <li class="step-item"><a>Network Params</a></li>
        <li class="step-item"><a>API Keys</a></li>
        <li class="step-item active"><a>Measurements</a></li>
        <li class="step-item"><a>Timing</a></li>
        <li class="step-item"><a>Verify</a></li>
      </ul>
    </div>

    <div class="panel-body">
      <br />
      <hr />
      <br />
      <div id="loader" class="loading loading-lg"></div>
      <div class="columns flex-centered">
        <div class="column col-7">
          <form class="form-horizontal">
            <div class="divider text-center" data-content="Available measurements"></div>
            <br />
            <div class="form-group">
              {{ addSwitch("input-led-enabled", "LED notifications") }}
              {{ addSwitch("input-battery", "Battery statistics") }}
              {{ addSwitch("input-board-sense", "Board humidity/temperature") }}
              {{ addSwitch("input-board-stat", "Board health statistics") }}
              {{ addSwitch("input-network", "Network statistics") }}
              {{ addSwitch("input-ota", "Over the Air Updates") }}
              <div class="col-4 col-sm-12">
                <label class="form-label" for="measurements">Temperature Unit</label>
              </div>
              <div class="col-3 col-sm-12">
                <div class="form-group">
                  <select class="form-select" id="input-temp-unit">
                    <option value=true>Celsius (°C)</option>
                    <option value=false>Fahrenheit (°F)</option>
                  </select>
                </div>
              </div>
              <div class="column col-5 col-mr-auto"></div>
              <br />
              <br />
              <div class="col-4 col-sm-12">
                <label class="form-label" for="measurements">GPS</label>
              </div>
              <div class="col-8 col-sm-12">
                <div class="form-group">
                  <label class="form-switch">
                    <input type="checkbox" id="input-gps-enable" onclick="checkboxStatusChanged('gps')" />
                    <i class="form-icon"></i>
                  </label>
                </div>
              </div>
              <div id="address-gps" class="col-12">
                <br />
                <div id="address-gps-timeout" class="col-12" style="display:block">
                  <div class="form-group">
                    <div class="column col-1 col-mr-auto"></div>
                    <div class="col-3 col-sm-12">
                      <label class="form-label" for="measurements">GPS Timeout (seconds)
                      </label>
                    </div>
                    <div class="col-3 col-sm-12">
                      <input class="form-input constr-field" type="number" id="input-gps-timeout"/>
                    </div>
                    <div class="column col-5 col-mr-auto"></div>
                  </div>
                </div>
                <br />
                <div id="address-gps-sat-num" class="col-12" style="display:block">
                  <div class="form-group">
                    <div class="column col-1 col-mr-auto"></div>
                    <div class="col-3 col-sm-12">
                      <label class="form-label" for="measurements">Min number of satellites
                      </label>
                    </div>
                    <div class="col-3 col-sm-12">
                      <input class="form-input constr-field" type="number" id="input-gps-sat-num"/>
                    </div>
                    <div class="column col-5 col-mr-auto"></div>
                  </div>
                </div>
                <br />
                <br />
              </div>
              <br />
              <br />
            </div>
            <div class="divider text-center" data-content="Device Selection"></div>
            <br />
            <!-- board selector -->
            <ul class="tab tab-block">
              <li id="tab-i2c-scale-board-options" class="tab-item active" onclick="boardChanged(event, 'i2c-scale-board-options')">
                <a class="pointer">Cellular Digital/Scale</a>
              </li>
              <li id="tab-esp32s2-bg600-i2c-analog-options" class="tab-item" onclick="boardChanged(event, 'esp32s2-bg600-i2c-analog-options')">
                <a class="pointer">Cellular + Shield I²C/Analog</a>
              </li>
              <li id="tab-ins-esp-gen-sdi12-board-options" class="tab-item" onclick="boardChanged(event, 'ins-esp-gen-sdi12-board-options')">
                <a class="pointer">Cellular + Shield SDI-12</a>
              </li>
            </ul>

            <div id="i2c-scale-board-options" class="tabcontent" style="display: block">
              <form class="form-horizontal">
                <br />
                <br />
                <div class="form-group">
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">I²C #1</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <select class="form-select" id="input-ins-esp-i2c-1">
                        {{ generateOptions(i2cOptions) }}
                      </select>
                    </div>
                  </div>
                  <br />
                  <br />
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">I²C #2</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <select class="form-select" id="input-ins-esp-i2c-2">
                        {{ generateOptions(i2cOptions) }}
                      </select>
                    </div>
                  </div>
                  <br />
                  <br />
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">Analog / Digital P1</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <select class="form-select" id="input-ins-esp-sensor-a-d-p1">
                        {{ generateOptions(adcOptions) }}
                      </select>
                    </div>
                  </div>
                  <br />
                  <br />
                  {{ addSwitch("input-ins-esp-weight-scale", "Weight Scale") }}
                  <br />
                  <br />
                </div>
              </form>
            </div>
            <div id="esp32s2-bg600-i2c-analog-options" class="tabcontent" style="display: none">
              <form class="form-horizontal">
                <br />
                <br />
                <div class="form-group">
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">I²C</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <select class="form-select" id="input-ins-esp-s1-i2c">
                        {{ generateOptions(i2cOptions) }}
                      </select>
                    </div>
                  </div>
                  <br />
                  <br />
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">Analog / Digital P1</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <select class="form-select" id="input-ins-esp-s1-sensor-a-d-p1" onchange="selectionChanged(this)">
                        {{ generateOptions(adcOptions) }}
                      </select>
                    </div>
                  </div>
                  <br />
                  <div id="input-ins-esp-s1-sensor-a-d-p1-trans-div" class="col-12" style="display:block">
                    <div class="form-group">
                      <div class="column col-1 col-mr-auto"></div>
                      <div class="col-3  col-sm-12">
                        <label class="form-label" for="measurements">transformation
                          <button class="btn btn-link tooltip"
                            data-tooltip="python script to&#xa;transform raw Value (v)&#xa;from millivolt&#xa;to meaningful value&#xa;ex: 2*v + v**2">
                            <i class="icon icon-flag"></i>
                          </button>
                        </label>
                      </div>
                      <div class="col-6 col-sm-12">
                        <input class="form-input constr-field" id="input-ins-esp-s1-sensor-a-d-p1-t" />
                      </div>
                      <div class="column col-2 col-mr-auto"></div>
                    </div>
                  </div>
                  <br />
                  <br />
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">Analog / Digital P2</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <select class="form-select" id="input-ins-esp-s1-sensor-a-d-p2" onchange="selectionChanged(this)">
                        {{ generateOptions(adcOptions) }}
                      </select>
                    </div>
                  </div>
                  <div id="input-ins-esp-s1-sensor-a-d-p2-trans-div" class="col-12" style="display:none">
                    <div class="form-group">
                      <div class="column col-1 col-mr-auto"></div>
                      <div class="col-3  col-sm-12">
                        <label class="form-label" for="measurements">transformation
                          <button class="btn btn-link tooltip"
                            data-tooltip="python script to&#xa;transform raw value (v)&#xa;from millivolt&#xa;to meaningful value&#xa;ex: 2*v + v**2">
                            <i class="icon icon-flag"></i>
                          </button>
                        </label>
                      </div>
                      <div class="col-6 col-sm-12">
                        <input class="form-input constr-field" id="input-ins-esp-s1-sensor-a-d-p2-t" />
                      </div>
                      <div class="column col-2 col-mr-auto"></div>
                    </div>
                  </div>
                  <br />
                  <br />
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">Analog / Digital P3</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <select class="form-select" id="input-ins-esp-s1-sensor-a-d-p3" onchange="selectionChanged(this)">
                        {{ generateOptions(adcOptions) }}
                      </select>
                    </div>
                  </div>
                  <div id="input-ins-esp-s1-sensor-a-d-p3-trans-div" class="col-12" style="display:none">
                    <div class="form-group">
                      <div class="column col-1 col-mr-auto"></div>
                      <div class="col-3  col-sm-12">
                        <label class="form-label" for="measurements">transformation
                          <button class="btn btn-link tooltip"
                            data-tooltip="python script to&#xa;transform raw value (v)&#xa;from millivolt&#xa;to meaningful value&#xa;ex: 2*v + v**2">
                            <i class="icon icon-flag"></i>
                          </button>
                        </label>
                      </div>
                      <div class="col-6 col-sm-12">
                        <input class="form-input constr-field" id="input-ins-esp-s1-sensor-a-d-p3-t" />
                      </div>
                      <div class="column col-2 col-mr-auto"></div>
                    </div>
                  </div>
                  <br />
                  <br />
                  <br />
                  <br />
                </div>
              </form>
            </div>
            <!-- sdi board related settings -->
            <div id="ins-esp-gen-sdi12-board-options" class="tabcontent" style="display: none">
              <form class="form-horizontal">
                <br />
                <br />
                <div class="form-group">
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">SDI-12 n.1</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <label class="form-switch">
                        <input type="checkbox" id="input-ins-esp-gen-sdi12-1-enable" onclick="checkboxStatusChanged('ins-esp-gen-sdi12-1')" />
                        <i class="form-icon"></i>
                      </label>
                    </div>
                  </div>
                  <div id="address-ins-esp-gen-sdi12-1" class="col-12" style="display:none">
                    <div class="form-group">
                      <div class="column col-1 col-mr-auto"></div>
                      <div class="col-3 col-sm-12">
                        <label class="form-label" for="measurements">address
                          <button class="btn btn-link tooltip" data-tooltip="addresses must be preconfigured&#xa;to not collide">
                            <i class="icon icon-flag"></i>
                          </button>
                        </label>
                      </div>
                      <div class="col-3 col-sm-12">
                        <select class="form-select" id="option-ins-esp-gen-sdi12-1-address">
                          {{ for i in range(0,10) }} <option> {{ i }}</option> {{ end }}
                        </select>
                      </div>
                      <div class="column col-5 col-mr-auto"></div>
                    </div>
                  </div>
                  <br />
                  <br />
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="measurements">SDI-12 n.2</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <div class="form-group">
                      <label class="form-switch">
                        <input type="checkbox" id="input-ins-esp-gen-sdi12-2-enable" onclick="checkboxStatusChanged('ins-esp-gen-sdi12-2')" />
                        <i class="form-icon"></i>
                      </label>
                    </div>
                  </div>
                  <div id="address-ins-esp-gen-sdi12-2" class="col-12" style="display:none">
                    <div class="form-group">
                      <div class="column col-1 col-mr-auto"></div>
                      <div class="col-3 col-sm-12">
                        <label class="form-label" for="measurements">address
                          <button class="btn btn-link tooltip" data-tooltip="addresses must be preconfigured to not collide">
                            <i class="icon icon-flag"></i>
                          </button>
                        </label>
                      </div>
                      <div class="col-3 col-sm-12">
                        <select class="form-select" id="option-ins-esp-gen-sdi12-2-address">
                          {{ for i in range(0,10) }} <option> {{ i }}</option> {{ end }}
                        </select>
                      </div>
                      <div class="column col-5 col-mr-auto"></div>
                    </div>
                  </div>
                  <br />
                  <br />
                  <div class="col-4 col-sm-12">
                    <label class="form-label" for="input-example-1">Warm Up time (ms)</label>
                  </div>
                  <div class="col-8 col-sm-12">
                    <input class="form-input constr-field" type="text" id="input-ins-esp-gen-sdi12-warmup-time"/>
                  </div>
                  <br />
                  <br />
                  <br />
                  <br />
                </div>
              </form>
            </div>
            <div class="divider text-center" data-content="Explicit key-values"></div>
            <br />
            <div class="form-group" id="keyvalue">
              <div class="cardcontainer">
                <div class="card">
                  <div class="card-body">
                    <div class="columns flex-centered">
                      <div class="col-1 col-sm-6" style="text-align: center;">
                        <label class="form-label" for="measurements">key
                        </label>
                      </div>
                      <div class="col-4 col-sm-6" style="text-align: center;">
                        <input class="form-input constr-field" id="key0" placeholder="field name" />
                      </div>
                      <div class="column col-1 col-mr-auto"></div>
                      <div class="col-1 col-sm-6" style="text-align: center;">
                        <label class="form-label" for="measurements">value
                        </label>
                      </div>
                      <div class="col-4 col-sm-6" style="text-align: center;">
                        <input class="form-input constr-field" id="value0" placeholder="field value" />
                      </div>
                      <div class="col-1">
                        <div class="p-centered" style="text-align: center;">
                          <button class="btn btn-action" onclick="addKeyValue()"><i class="icon icon-plus"></i></button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <br />
              </div>
            </div>
          </form>
          <div class="columns">
            <div class="column col-4 col-mr-auto"></div>
            <div class="column col-1"><button class="btn btn-primary float-right" type="button" onclick="goBack()">Back</button></div>
            <div class="column col-1"><button class="btn btn-primary float-right" onclick="validateMyForm()" id="save-button">Save</button></div>
          </div>
          <br />
          <br />
        </div>
      </div>
      <br />
      <br />
    </div>
  </div>

  <script src="js.cookie.min.js"></script>
  <script src="utils.js"></script>
  <script>
      var boardNamePerTab = {
        "ins-esp-gen-sdi12-board-options" : "ins_esp_gen_sdi12",
        "i2c-scale-board-options" : "ins_esp_gen_1",
        "esp32s2-bg600-i2c-analog-options" : "ins_esp_gen_s1"
      }

      var tabNamePerBoard = {
        "ins_esp_gen_sdi12" : "ins-esp-gen-sdi12-board-options",
        "ins_esp_gen_1" : "i2c-scale-board-options" ,
        "ins_esp_gen_s1" : "esp32s2-bg600-i2c-analog-options"
      }

    function initializeValues() {
      var gps = Boolean({{ meas_gps_enabled }})

      setElemValueBool('input-led-enabled', {{ meas_led_enabled }}, true)
      setElemValueBool('input-battery', {{ meas_battery_stat }}, true)
      setElemValueBool('input-board-sense', {{ meas_board_sense }}, true)
      setElemValueBool('input-board-stat', {{ meas_board_stat }}, false)
      setElemValueBool('input-network', {{ meas_network_stat }}, true)
      setElemValueBool('input-ota', {{ system_enable_ota }}, true)
      setElemValueBool('input-ins-esp-weight-scale', {{ meas_scale_enabled }}, false)

      setElemValueBool('input-gps-enable', gps, true)
      setElemValueBool('input-temp-unit', {{ meas_temp_unit }}, true, "value")

      checkboxStatusChanged('gps')
      var boardType = "{{ selected_board }}"
      if(boardType && tabNamePerBoard[boardType])
        boardChanged(undefined, tabNamePerBoard[boardType])

      setElemValue('input-gps-timeout', {{ meas_gps_timeout }}, 120, false)
      setElemValue('input-gps-sat-num', {{ meas_gps_sat_num }}, 4, false)

      setElemValueBool('input-ins-esp-gen-sdi12-1-enable', {{ meas_sdi_1_enabled }}, false)
      setElemValueBool('input-ins-esp-gen-sdi12-2-enable', {{ meas_sdi_2_enabled }}, false)

      setElemValue('option-ins-esp-gen-sdi12-1-address', {{ meas_sdi_1_address }}, 0)
      setElemValue('option-ins-esp-gen-sdi12-2-address', {{ meas_sdi_2_address }}, 1)
      setElemValue('input-ins-esp-gen-sdi12-warmup-time', {{ meas_sdi_warmup_time }}, 1000)

      checkboxStatusChanged('ins-esp-gen-sdi12-1')
      checkboxStatusChanged('ins-esp-gen-sdi12-2')

      var adp1 = "{{ meas_sensor_a_d_p1 }}"
      var adp2 = "{{ meas_sensor_a_d_p2 }}"
      var adp3 = "{{ meas_sensor_a_d_p3 }}"

      setElemValue('input-ins-esp-i2c-1', "{{ meas_i2c_1 }}", "disabled")
      setElemValue('input-ins-esp-s1-i2c', "{{ meas_i2c_1 }}", "disabled")
      setElemValue('input-ins-esp-i2c-2', "{{ meas_i2c_2 }}", "disabled")
      setElemValue('input-ins-esp-sensor-a-d-p1', adp1 , "disabled")
      setElemValue('input-ins-esp-s1-sensor-a-d-p1', adp1, "disabled")
      setElemValue('input-ins-esp-s1-sensor-a-d-p2', adp2, "disabled")
      setElemValue('input-ins-esp-s1-sensor-a-d-p3', adp3, "disabled")

      setElemValue("input-ins-esp-s1-sensor-a-d-p1-t", "{{ meas_sensor_a_d_p1_t }}", "v")
      setElemValue("input-ins-esp-s1-sensor-a-d-p2-t", "{{ meas_sensor_a_d_p2_t }}", "v")
      setElemValue("input-ins-esp-s1-sensor-a-d-p3-t", "{{ meas_sensor_a_d_p3_t }}", "v")

      showElement('input-ins-esp-s1-sensor-a-d-p1-trans-div', adp1 === "analog")
      showElement('input-ins-esp-s1-sensor-a-d-p2-trans-div', adp2 === "analog")
      showElement('input-ins-esp-s1-sensor-a-d-p3-trans-div', adp3 === "analog")

      var index = 0
      var keyValueDict = '{{ meas_keyvalue }}'
      // bypass issue of html encoding that is enforced by an unknown module
      try {
        if(keyValueDict !== 'undefined') {
          keyValueDict = JSON.parse(keyValueDict)
          for(i in keyValueDict) {
              document.getElementById('key' + index).value = i
              document.getElementById('value' + index).value = keyValueDict[i]
              addKeyValue()
              index += 1
          }
        }
      } catch(e) {}

      showElement('loader', false)
    }

    function clearCookies() {
      Cookies.remove('meas-led-enabled')
      Cookies.remove('meas-battery-stat')
      Cookies.remove('meas-board-sense')
      Cookies.remove('meas-board-stat')
      Cookies.remove('meas-gps-enabled')
      Cookies.remove('meas-gps-sat-num')
      Cookies.remove('meas-gps-timeout')
      Cookies.remove('meas-i2c-1')
      Cookies.remove('meas-i2c-2')
      Cookies.remove('meas-network-stat')
      Cookies.remove('meas-scale-enabled')
      Cookies.remove('meas-scale-offset')
      Cookies.remove('meas-scale-scale')
      Cookies.remove('meas-sdi-1-address')
      Cookies.remove('meas-sdi-1-enabled')
      Cookies.remove('meas-sdi-2-address')
      Cookies.remove('meas-sdi-2-enabled')
      Cookies.remove('meas-sensor-a-d-p1')
      Cookies.remove('meas-sensor-a-d-p1-t')
      Cookies.remove('meas-sensor-a-d-p2')
      Cookies.remove('meas-sensor-a-d-p2-t')
      Cookies.remove('meas-sensor-a-d-p3')
      Cookies.remove('meas-sensor-a-d-p3-t')
      Cookies.remove('meas-sensor-scale-enabled')
      Cookies.remove('meas-temp-unit')
      Cookies.remove('selected-board')
      Cookies.remove('system-enable-ota')
      Cookies.remove('meas-keyvalue')
    }

    function storeData() {
      document.getElementById('save-button').disabled = true
      clearCookies();

      Cookies.set('meas-led-enabled', boolElemToPyStr('input-led-enabled'))
      Cookies.set('meas-battery-stat', boolElemToPyStr('input-battery'))
      Cookies.set('meas-board-sense', boolElemToPyStr('input-board-sense'))
      Cookies.set('meas-board-stat', boolElemToPyStr('input-board-stat'))
      Cookies.set('meas-network-stat', boolElemToPyStr('input-network'))
      Cookies.set('system-enable-ota', boolElemToPyStr('input-ota'))
      Cookies.set('meas-gps-enabled', boolElemToPyStr('input-gps-enable'))

      Cookies.set('meas-temp-unit', boolElemToPyStr('input-temp-unit', 'value'))

      Cookies.set('meas-gps-timeout', document.getElementById('input-gps-timeout').value)
      Cookies.set('meas-gps-sat-num', document.getElementById('input-gps-sat-num').value)

      if (elementIsVisible("ins-esp-gen-sdi12-board-options")) {
        Cookies.set('selected-board', boardNamePerTab["ins-esp-gen-sdi12-board-options"] )
        var address1_elem = document.getElementById('option-ins-esp-gen-sdi12-1-address')
        var address2_elem = document.getElementById('option-ins-esp-gen-sdi12-2-address')

        Cookies.set('meas-sdi-1-enabled', boolElemToPyStr('input-ins-esp-gen-sdi12-1-enable'))
        Cookies.set('meas-sdi-2-enabled', boolElemToPyStr('input-ins-esp-gen-sdi12-2-enable'))
        Cookies.set('meas-sdi-1-address', address1_elem !== null ? address1_elem.value : "")
        Cookies.set('meas-sdi-2-address', address2_elem !== null ? address2_elem.value : "")

        Cookies.set('meas-sdi-warmup-time', document.getElementById('input-ins-esp-gen-sdi12-warmup-time').value)
        location.href = "step-6-timing.pyhtml"
      }
      else if (elementIsVisible("i2c-scale-board-options")) {
        Cookies.set('selected-board', boardNamePerTab["i2c-scale-board-options"] )
        Cookies.set('meas-i2c-1', document.getElementById('input-ins-esp-i2c-1').value)
        Cookies.set('meas-i2c-2', document.getElementById('input-ins-esp-i2c-2').value)
        Cookies.set('meas-sensor-a-d-p1', document.getElementById('input-ins-esp-sensor-a-d-p1').value)
        Cookies.set('meas-scale-enabled', boolElemToPyStr('input-ins-esp-weight-scale'))

        if (!document.getElementById('input-ins-esp-weight-scale').checked) {
          Cookies.set('meas-scale-offset', 0)
          Cookies.set('meas-scale-scale', 1)
          location.href = "step-6-timing.pyhtml"
        }
        else {
          var scale = {{ meas_scale_scale }}
          var offset = {{ meas_scale_offset }}

          if(scale && offset) {
            Cookies.set('meas-scale-offset', offset)
            Cookies.set('meas-scale-scale', scale)
            location.href = "step-5-3-scale-calibr-res.pyhtml"
          }
          else
            location.href = "step-5-1-scale-idle.html"
        }
      }
      else if (elementIsVisible("esp32s2-bg600-i2c-analog-options")) {
        Cookies.set('selected-board', boardNamePerTab["esp32s2-bg600-i2c-analog-options"])
        Cookies.set('meas-i2c-1', document.getElementById('input-ins-esp-s1-i2c').value)
        Cookies.set('meas-sensor-a-d-p1', document.getElementById('input-ins-esp-s1-sensor-a-d-p1').value)
        Cookies.set('meas-sensor-a-d-p2', document.getElementById('input-ins-esp-s1-sensor-a-d-p2').value)
        Cookies.set('meas-sensor-a-d-p3', document.getElementById('input-ins-esp-s1-sensor-a-d-p3').value)

        if (elementIsVisible('input-ins-esp-s1-sensor-a-d-p1-trans-div'))
          Cookies.set('meas-sensor-a-d-p1-t', document.getElementById('input-ins-esp-s1-sensor-a-d-p1-t').value)

        if (elementIsVisible('input-ins-esp-s1-sensor-a-d-p2-trans-div'))
          Cookies.set('meas-sensor-a-d-p2-t', document.getElementById('input-ins-esp-s1-sensor-a-d-p2-t').value)

        if (elementIsVisible('input-ins-esp-s1-sensor-a-d-p3-trans-div'))
          Cookies.set('meas-sensor-a-d-p3-t', document.getElementById('input-ins-esp-s1-sensor-a-d-p3-t').value)

        location.href = "step-6-timing.pyhtml"
      }

      Cookies.set('meas-keyvalue', JSON.stringify(getKeyValuePairs()))
    }

    function boardChanged(evt, boardDivId) {
      var i, tabcontent, tablinks;

      tabcontent = document.getElementsByClassName("tabcontent");
      for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
      }

      tablinks = document.getElementsByClassName("tab-item");
      for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
      }

      showElement(boardDivId, true)
      document.getElementById("tab-" + boardDivId).className += " active";
    }

    function validateMyForm() {
      storeData()
      return true
    }

    function selectionChanged(selectObj) {
      showElement(selectObj.id + "-trans-div", selectObj.value === "analog")
    }

    let keyValuePairCnt = 1

    function addKeyValue() {
      var elements = document.getElementsByClassName('cardcontainer');
      var requiredElement = elements[0];
      var parent = document.getElementById("keyvalue");

      NodeList.prototype.forEach = Array.prototype.forEach;
      var children = requiredElement.childNodes;
      children.forEach(function (item) {
        var cln = item.cloneNode(true);
        if (item.tagName && cln.tagName.toLowerCase() === "div") {
          clearAndMarkAllInputFields(cln, keyValuePairCnt++)
        }

        parent.appendChild(cln);
      });
    }

    function clearAndMarkAllInputFields(parent, index) {
      var children = parent.childNodes;
      children.forEach(function (item) {
        if (item.tagName && item.tagName.toLowerCase() === "input") {
          item.value = ''
          if (item.id === "key0") item.id = "key" + index
          else if (item.id === "value0") item.id = "value" + index
        }
        else clearAndMarkAllInputFields(item, index)
      })
    }

    function getKeyValuePairs() {
      let cnt = 0
      let returnObj = {}
      while (1) {
        var elemKey = document.getElementById("key" + cnt);
        var elemValue = document.getElementById("value" + cnt);

        if (!elemKey && !elemValue)
          break

        if (elemKey.value !== '' && elemValue.value !== '')
          returnObj[elemKey.value] = elemValue.value
        cnt++
      }

      return returnObj
    }

    initializeValues()
  </script>
</body>

</html>
