<!DOCTYPE html>

<html>
    <head>
        <meta charset="UTF-8" />
        <title>insigh.io Device</title>
        <link rel="stylesheet" href="css/style.css" />
        <link rel="stylesheet" href="css/spectre-icons.min.css" />
        <link rel="stylesheet" href="css/spectre.min.css" />
    </head>

    <body class="body-custom">
      {{ py }}
      import gc
      gc.collect()
      {{ end }}
        <img src="img/logo.png" class="img-responsive img-center">

        <div class="panel panel-custom">
          <div class="panel-header">
            <div class="panel-title text-center">Set network connection details</div>
          </div>

          <div class="panel-nav">
            <ul class="step">
              <li class="step-item">
                <a href="#" class="tooltip" data-tooltip="Step 1">Login</a>
              </li>
              <li class="step-item">
                <a href="#" class="tooltip" data-tooltip="Step 2">Select Network</a>
              </li>
              <li class="step-item active">
                <a href="#" class="tooltip" data-tooltip="Step 3">Network Params</a>
              </li>
              <li class="step-item">
                <a href="#" class="tooltip" data-tooltip="Step 4">API Keys</a>
              </li>
              <li class="step-item">
                <a href="#" class="tooltip" data-tooltip="Step 5">Measurements</a>
              </li>
              <li class="step-item">
                <a href="#" class="tooltip" data-tooltip="Step 6">Timing</a>
              </li>
              <li class="step-item">
                <a href="#" class="tooltip" data-tooltip="Step 7">Verify</a>
              </li>
            </ul>
          </div>

          <div class="panel-body">
            <br />
            <hr />
            <br />
            <div class="text-center">
              Configuration details for: <span class="text-bold">WiFi</span>
            </div>
            <br />
            <div class="columns flex-centered">
              <div class="column col-7">
                <form class="form-horizontal">
                  <div class="form-group">
                    <div class="col-12">
                      <div class="divider text-center" data-content="Connection Configuration"></div>
                    </div>
                    <br />
                    <br />
                    <div class="col-3 col-sm-12">
                      <label class="form-label" for="input-example-1">SSID</label>
                    </div>
                    <div class="col-9 col-sm-12">
                      <input class="form-input constr-field" type="text" id="input-ssid"></input>
                    </div>
                    <br />
                    <br />
                    <div class="col-3 col-sm-12">
                      <label class="form-label" for="input-example-1">Password</label>
                    </div>
                    <div class="col-9 col-sm-12">
                      <input class="form-input constr-field" type="text" id="input-ssid-pass"></input>
                    </div>
                    <br />
                    <br />
                    <div class="col-12">
                      <div class="divider text-center" data-content="Generic Configuration"></div>
                    </div>
                    <br />
                    <br />
                    <div class="col-3 col-sm-12">
                      <label class="form-label" for="input-example-cellular">Protocol</label>
                    </div>
                    <div class="col-9 col-sm-12">
                      <label class="form-radio">
                        <input type="radio" name="protocol" value="mqtt" checked>
                        <i class="form-icon"></i> MQTT
                      </label>
                      <label class="form-radio">
                        <input type="radio" name="protocol" value="coap">
                        <i class="form-icon"></i> CoAP
                      </label>
                    </div>
                    <br />
                    <br />
                    <div class="column col-12">
                      <button class="btn btn-primary float-right" onClick="validateMyForm()" id="save-button" style="margin-left: 30px">Save</button>
                      <button class="btn btn-primary float-right" type="button" onclick="goBack()">Back</button>
                    </div>
                    <br />
                    <br />
                    <div class="text-normal">
                      SSIDs in range:
                      <button class="btn btn-link tooltip" data-tooltip="Not showing weak networks">
                        <i class="icon icon-flag"></i>
                      </button>
                    </div>
                    <table class="table table-striped table-hover">
                      <thead>
                        <tr>
                          <th>SSID</th>
                          <th>rssi</th>
                          <th>Quality</th>
                        </tr>
                      </thead>
                      <tbody>
                        {{ for net in wifiAvailableNets }}
                        <tr onclick="ssidSelected(event)">
                          <td class="pointer">{{ net.ssid }}</td>
                          <td class="pointer"><span >{{ net.rssi }}</span>
                          {{ if net.rssi >= -50 }}
                          <td class="pointer" style><span style="color: green">very good</span></td>
                          {{ elif net.rssi < -50 and net.rssi >= -67 }}
                          <td class="pointer"><span style="color: green">good</span></td>
                          {{ elif net.rssi < -67 and net.rssi > -89 }}
                          <td class="pointer"><span style="color: #E2B200">fair</span></td>
                          {{ elif net.rssi <= -89}}
                          <td class="pointer"><span style="color: #A2021A">bad</span></td>
                          {{ end }}
                        </tr>
                        {{ end }}

                      </tbody>
                    </table>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>

        <script src="js.cookie.min.js"></script>
        <script src="utils.js"></script>
        <script >
        function initializeValues() {
          var protocol = "{{ protocol }}"
          var ssid = "{{ wifi_ssid }}"
          var pass = "{{ wifi_pass }}"

          document.getElementById('input-ssid').value = ssid ? ssid : ""
          document.getElementById('input-ssid').value = pass ? pass : ""
          setRadioGroupValue('protocol', protocol ? protocol : "mqtt")
        }

          function clearCookies() {
            Cookies.remove('lora-region')
            Cookies.remove('network')
            Cookies.remove('lora-adr')
            Cookies.remove('lora-confirmed')
            Cookies.remove('lora-dr')
            Cookies.remove('lora-retries')
            Cookies.remove('cell-apn')
            Cookies.remove('cell-band')
            Cookies.remove('wifi-pass')
            Cookies.remove('wifi-ssid')
            Cookies.remove('protocol')
          }

          function setProtocolCookie(){
            var protocols = document.getElementsByName('protocol')

            for (var i = 0, length = protocols.length; i < length; i++) {
              if (protocols[i].checked) {
                Cookies.set('protocol', protocols[i].value)
                break;
              }
            }
          }

          function storeData(){
            document.getElementById('save-button').disabled = true
            clearCookies();

            //wifi
            Cookies.set('network', "wifi")
            Cookies.set('wifi-ssid', document.getElementById('input-ssid').value.trim())
            Cookies.set('wifi-pass', document.getElementById('input-ssid-pass').value)

            setProtocolCookie();

            location.href = "step-4-keys.pyhtml?op=WiFi";
          }

          function ssidSelected(event) {
            if (!e) var e = window.event;                // Get the window event
            e.cancelBubble = true;                       // IE Stop propagation
            if (e.stopPropagation) e.stopPropagation();  // Other Broswers
            console.log("event: ", event)
            console.log("parent: ", event.srcElement.parentElement)
            document.getElementById('input-ssid').value = event.srcElement.parentElement.children[0].textContent
          }

          function validateField(fieldObj, message) {
            if(fieldObj.value.trim() == ""){
                fieldObj.style.borderColor = "red";
                fieldObj.focus()
                window.alert("Please enter a valid " + message)
                return false
            }
            fieldObj.style.borderColor = "green";
            return true
          }

          function validateMyForm(){
            var ssid =  document.getElementById('input-ssid')
            var ssid_pass =  document.getElementById('input-ssid-pass')
            if(!validateField(ssid, "SSID") ||
               !validateField(ssid_pass, "password")
            ) return false

            storeData()
            return true
          }

          initializeValues()
        </script>
    </body>
</html>
